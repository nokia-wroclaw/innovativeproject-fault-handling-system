@model Fault_handling_system.Models.ScheduleFilterViewModel
@{
	ViewData["Title"] = "Index";
}
<h2>Your own report scheduler</h2>
<a id="helpBtn" class="btn btn-success" onclick="startIntro()" style="float: right">
	<i class="glyphicon glyphicon-question-sign"></i>
</a>
@using (Html.BeginForm("AddNew", "Scheduler", FormMethod.Post, new { @class = "form-inline" }))
{

	<button id="NewReport" class="btn btn-info " type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
		Create new
	</button>
	<div class="collapse collapsibleForm" id="collapseExample" style="margin-top: 5px">
		<div class="card card-body">
			<div class="row">
				<div class="col-lg-3 col-md-4 col-sm-4">
					<ul class="list-unstyled">
						<li>
							<div class="form-group" id="intervalGroup">
								@Html.Label("IntervalLabel", "Interval", new { @id = "IntervalLabel" })
								@Html.DropDownList("IntervalDropDown", ViewData["IntervalOptionList"] as List<SelectListItem>, new { @class = "form-control dropdown-toggle" })
							</div>
						</li>
						<li>
							<div class="form-group" id="filterGroup">
								@Html.Label("FilterLabel", "Filter", new { @id = "FilterLabel" })
								@Html.DropDownList("FilterId", ViewData["FilterId"] as IEnumerable<SelectListItem>, new { @class = "form-control dropdown-toggle" })
							</div>
						</li>
						<li>
							<div class="form-group">
								@Html.Label("CronLabel", "Cron", new { @id = "CronLabel" })
								@Html.TextBox("Cron", "", new { @class = " form-control" })
								@Html.Label("HourLabel", "Hour", new { @id = "HourLabel" })
								@Html.TextBox("Hour", "", new { @class = "form-control ", @type = "time" })
							</div>
						</li>
						<li>
							<div class="form-group">
								@Html.Label("DayofWeekLabel", "Day of week", new { @id = "DayOfWeekLabel" })
								@Html.DropDownList("DayOfWeek", ViewData["DaysOfWeek"] as IEnumerable<SelectListItem>, new { @class = "form-control dropdown-toggle" })
							</div>
						</li>
					</ul>
				</div>
				<div class="col-lg-3 col-md-4 col-sm-7">
					<div class="form-group" id="mailingGroup">
						<ul class="list-unstyled">
							<li>
								@Html.Label("MailingListsLabel", "Mailing List", new { @id = "MailingListsLabel" })
							</li>
							<li>
								@Html.TextArea("MailingLists", ViewData["MailingLists"] as String, 3, 58, new { @class = "form-control" })
							</li>
						</ul>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-md-2 col-sm-2">
					<input class="btn btn-info form-control" id="addSchedule" type="submit" value="Add to scheduler" />
				</div>
			</div>
		</div>
	</div>
}

<div class="panel panel-primary" id="scheduledFiltersPanel" style="margin-top: 5px">
	<div class="panel-heading">
		<h2 class="panel-title">Your schedules</h2>
	</div>
	<div class="panel-body" style="overflow-x: auto; padding: 0px 0px 0px 0px">
		<table class="table">
			<thead>
				<tr>
					<th>
						@Html.ActionLink("Interval", "Index")
					</th>
					<th>
						@Html.ActionLink("Filter Name", "Index")
					</th>
					<th>
						@Html.ActionLink("Mailing List", "Index")
					</th>
					<th>
						@Html.ActionLink("Active", "Index")
					</th>
					<th>
						@Html.ActionLink("Remove", "Index")
					</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.ScheduleFilter)
				{

					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.Interval)
							@Html.DisplayFor(modelItem => item.Cron)
							@Html.DisplayFor(modelItem => item.Hour)
							@Html.DisplayFor(modelItem => item.DayOfWeek)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Filter.Name)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.MailingList)
						</td>
						<td>
							@if (item.Active)
							{
								using (Html.BeginForm("Stop", "Scheduler", FormMethod.Post, new { @class = "form-inline" }))
								{
									@Html.Hidden("ID", item.Id)
									<input class="btn btn-info form-control" type="submit" value="Stop" style="margin: 5px" />
								}
							}
							else
							{
								using (Html.BeginForm("Start", "Scheduler", FormMethod.Post, new { @class = "form-inline" }))
								{
									@Html.Hidden("ID", item.Id)
									<input class="btn btn-info form-control" type="submit" value="Start" style="margin: 5px" />
								}
							}
						</td>
						<td>
							@using (Html.BeginForm("Delete", "Scheduler", FormMethod.Post, new { @class = "form-inline" }))
							{
								@Html.Hidden("ID", item.Id)
								<input class="btn btn-danger form-control" type="submit" value="Remove permanently" style="margin: 5px" />
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

@section Scripts {
	<script>
		$(document).ready(function ()
		{
			$('#Cron,#CronLabel').hide();
			IntervalDropDown();
			$('#IntervalDropDown').click(function ()
			{
				IntervalDropDown();
			});
		});

		function IntervalDropDown()
		{
			var interval = $('#IntervalDropDown').find(":selected").val();
			var cron = $('#Cron,#CronLabel');
			var hour = $('#Hour,#HourLabel');
			var dayOfWeek = $('#DayOfWeek,#DayOfWeekLabel');
			if (interval == "C")
			{ //Cron
				cron.show();
				hour.hide();
				dayOfWeek.hide(); hour
			} else if (interval == "H")
			{ //Hourly
				cron.hide();
				hour.show();
				dayOfWeek.hide();
			} else if (interval == "D")
			{ //Daily
				cron.hide();
				hour.show();
				dayOfWeek.hide();
			} else if (interval == "W")
			{ //Weekly
				cron.hide();
				hour.show();
				dayOfWeek.show();
			}

		}

		var options_before = {
			steps: [
				{
					element: '#scheduledFiltersPanel',
					intro: 'Here are your schedules that send automated emails with reports.'
				},
				{
					element: '#NewReport',
					intro: "Click here to create a new schedule."
				},
				{
					element: '#intervalGroup',
					intro: "Choose type of interval you want for the schedule. You can choose by: <b>Hourly</b>, <b>Daily</b>, <b>Weekly</b> or a <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Cron\"><b>Cron expression</b></a>."
				},
				{
					element: '#filterGroup',
					intro: "Now choose a filter you want to use."
				},
				{
					element: '#mailingGroup',
					intro: "Enter email addresses that are going to receive reports to their email inboxes."
				},
				{
					element: '#addSchedule',
					intro: "Click <b>Add to scheduler</b> to create the schedule."
				}
			]
		};

		function startIntro()
		{
			var intro = introJs();
			intro.setOptions(options_before);
			intro.start().onbeforechange(function ()
			{
				if (intro._currentStep == "2" || intro._currentStep == "3" || intro._currentStep == "4" || intro._currentStep == "5")
				{
					$('#collapseExample').collapse("show");
				}
			});
		}
	</script>
}
